:: hackAndTape

/* Setting up a variable to store a shops inventory with price $generalMart represents the shops general goods, {shopitem: "snacks", cost : 10} shopitem = type of, cost = price. */
<<set $generalMart to [ 
  {shopitem: "groceries", cost: 300}, 
  {shopitem: "razors", cost : 2},
  {shopitem: "skin care", cost : 5},
  {shopitem: "lip balm", cost : 1},
  {shopitem: "snacks", cost : 10}
]>>


/* Some div containers to manage the CSS grid */
<div class="shop">
  <div class="shop-inventory">
  /* NOTE: the timed tag can probably be removed  */
    <<timed .3s>>
    /* 'looping' trough each item */
      <<for _item range $generalMart>>
      /* storing _item for use in macros */
      <<capture _item>>
        <div class="shop-item">
          <img class="item-img" @src="$imgPathInv+_item.shopitem.replace(/\s+/g, '-').toLowerCase()+'.png'" @alt="_item.shopitem" height="150px" width="150px" />
          <h4 class="item-name">_item.shopitem</h4>
  
          <div class="columns">
            <p class="price">_item.cost</p>
            <p class="btn" @id="_item.shopitem">
            /* TODO: look up hove to update button style when money is lost due to shopping spree */
            <<link Buy>>
              /* if pc have enough money */
            <<if $pc.money gte _item.cost>>
            <<set $pc.money -= _item.cost, $pc.inv.push(_item.shopitem)>>
            <</if>>
 
            <</link>>
            /* TODO: set class */
            
            </p>
          </div>
        </div>
        <</capture>>
      <</for>>
    <</timed>>
  </div>
</div>

/* Filter items,  */
<<set $allShopItems to $generalMart.filter(({shopitem}) => shopitem)>>
